bool sudoku(std::vector<std::vector<int>> grid) {
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        { std::vector<int> temp;
            for(int k=0;k<3;k++)
            {
               for(int h=0;h<3;h++)
                {
                int num = grid[3*i+k][3*j+h];
                if(find(temp.begin(),temp.end(),num)==temp.end())
                    temp.push_back(num);
                }
            }
            if(temp.size()!=9) return false;
        }
    }
for(int i=0;i<9;i++)
    {
        std::vector<int> temp1,temp2;
        for(int j=0;j<9;j++)
        {
            if(find(temp1.begin(),temp1.end(),grid[i][j])==temp1.end())
                    temp1.push_back(grid[i][j]);
            if(find(temp2.begin(),temp2.end(),grid[j][i])==temp2.end())
                    temp2.push_back(grid[j][i]);
        }
        if(temp1.size()!=9||temp2.size()!=9)return false;
    }
    return true;
}
