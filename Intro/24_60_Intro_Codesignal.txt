std::vector<std::vector<int>> minesweeper(std::vector<std::vector<bool>> matrix) {
    std::vector<std::vector<int>> temp1; std::vector<int>temp2;
    int s1 = matrix.size() - 1, s2 = matrix[0].size() - 1; std::cout << s1 << s2;
    for (int i = 0; i < s1+1; i++)
    {
        for (int j = 0; j < s2+1; j++)
        {
            int temp;
            if (i == 0) {
                if (j == 0) temp =  matrix[i + 1][j + 1] + matrix[i + 1][j] + matrix[i][j + 1];
                else if (j == s2) temp = matrix[i + 1][j] + matrix[i][j - 1] + matrix[i + 1][j - 1];
                else temp = matrix[i][j-1] + matrix[i+1][j-1] + matrix[i+1][j] + matrix[i+1][j+1] + matrix[i][j+1];
            }
            if (i == s1) {
                if (j == 0) temp = matrix[i - 1][j + 1] + matrix[i - 1][j] + matrix[i][j + 1];
                else if (j == s2) temp = matrix[i - 1][j] + matrix[i][j - 1] + matrix[i - 1][j - 1];
                else temp = matrix[i][j - 1] + matrix[i - 1][j - 1] + matrix[i - 1][j] + matrix[i - 1][j + 1] + matrix[i][j + 1];
            }
            if (i * j != 0 && i != s1 && j != s2)
                temp = matrix[i - 1][j] + matrix[i + 1][j]
                + matrix[i][j - 1] + matrix[i][j + 1]
                + matrix[i - 1][j - 1] + matrix[i - 1][j + 1]
                + matrix[i + 1][j - 1] + matrix[i + 1][j + 1];
            if (i != 0 && i != s1) {
                if (j == 0) temp = matrix[i - 1][j] + matrix[i + 1][j] + matrix[i - 1][j + 1] + matrix[i + 1][j + 1] + matrix[i][j + 1];
                if (j == s2) temp = matrix[i - 1][j] + matrix[i + 1][j] + matrix[i - 1][j - 1] + matrix[i + 1][j - 1] + matrix[i][j - 1];
            }
            temp2.push_back(temp);
        }
        temp1.push_back(temp2);
        temp2.clear();
    }
    return temp1;
}
